@model ControleVeiculos.MVC.Models.Tasks.TaskModel
@{
    ViewBag.Title = " - Kanban";
    Layout = "~/Views/Shared/_ContentPage.cshtml";
}
<link rel="stylesheet" href="~/Scripts/jkanban.min.css" />
<style>
    .notStarted {
        background: #ABB2B9;
    }

    .onGoing {
        background: #F7DC6F;
    }

    .completed {
        background: #73C6B6;
    }

    .canceled {
        background: #F1948A;
    }
</style>
<body>
    <div class="container-fluid">
        <br />
        <div class="content-header clearfix">

            <div class="pull-left">


                <button type="button" onclick="Add()" id="btnNew" class="btn btn-dark" data-toggle="modal" data-target='#AddModal' title="Nova Tarefa">
                    <i class="fa fa-plus-circle"></i> Novo
                </button>
                <button class="btn btn-primary" type="button" id="btnFiltrar" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample" title="Filtrar ">
                    <i class="fa fa-filter"></i> Filtrar
                </button>
                <a href="@Url.Action("Index")" class="btn btn-success" , title="Visualizar Lista de Tarefas">
                    <i class="fa fa-list"></i> Lista de Tarefas
                </a>
            </div>
        </div>
        <br />
        <div class="card">
            <div class="collapse" id="collapseExample">
                <div class="card card-body">
                    <div class="row">
                        <div class="col-md-12 mx-auto">
                            <div class="form-group row">
                                @Html.LabelFor(model => model.SearchSummary, new { @class = "col-sm-2 col-form-label text-right" })
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(model => model.SearchSummary, new { @class = "form-control" })
                                </div>
                                @Html.LabelFor(model => model.SearchAssignToID, new { @class = "col-sm-2 col-form-label text-right" })
                                <div class="col-sm-3">
                                    @Html.DropDownList("SearchAssignToID", Model.SearchLoadAssignTo, "Selecione...", new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.SearchCreatedByID, new { @class = "col-sm-2 col-form-label text-right" })
                                <div class="col-sm-3">
                                    @Html.DropDownList("SearchCreatedByID", Model.SearchLoadCreatedBy, "Selecione...", new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group row">

                            </div>
                            <div class="form-group row">
                            </div>
                            <br />
                            <div class="col">
                                <div class="text-center">
                                    <button type="button" class="btn btn-success btn-sm" id="btn-aplicar-filtros" title="Aplicar filtros">
                                        <i class="fa fa-check-circle"></i> Filtrar
                                    </button>
                                    <button class="btn btn-primary btn-sm" type="reset" id="btnFiltrar" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample" title="Fechar filtros" value="Refresh Page" onClick="window.location.reload()">
                                        <i class="fa fa-filter"></i> Fechar
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-body">
                <h5>Tarefas</h5>
                <div id="kanban"></div>
            </div>
        </div>
    </div>
    <script src="~/Scripts/jkanban.min.js"></script>
    <script>
    function drawChart() {
        var arrayNaoIniciada = [];
        var arrayEmAndamento = [];
        var arrayConcluida = [];
        var arrayCancelada = [];
        
        $.ajax({
            url: '@Html.Raw(Url.Action("GeAlltKanban", "Task"))',
            type: "POST",
            dataType: "json",
            data: {
                model: additionalData(),
            },
            error: function (xhr, status, error) {
                var err = eval("(" + xhr.responseText + ")");
                toastr.error(err.message);
            },
            success: function (data) {
                console.log(data);
                data.forEach(function (item) {
                    //console.log(item);
                    var temp = {
                        id: item.taskID,
                        title: item.summary,
                        username: item.assignToID
                    };
                    //301303300 nao iniciada
                    //301303301 em andamento
                    //301303302 concluida
                    //301303303 cancelada
                    if (item.statusID == 301303300) {
                        arrayNaoIniciada.push(temp);
                    }
                    else if (item.statusID == 301303301) {
                        arrayEmAndamento.push(temp);
                    }
                    else if (item.statusID == 301303302) {
                        arrayConcluida.push(temp);
                    }
                    else if (item.statusID == 301303303) {
                        arrayCancelada.push(temp);
                    } else {
                        //console.log(item.statusID);
                        console.log("status not found");
                    }
                });
                drawKanban(arrayNaoIniciada, arrayEmAndamento, arrayConcluida, arrayCancelada);
            }
        }
        );
    }
        function drawKanban(arrayNaoIniciada, arrayEmAndamento, arrayConcluida, arrayCancelada) {
            var width = screen.width;
            width = width / 4

            var kanban = new jKanban({
                element: "#kanban",
                gutter: "3px",
                widthBoard: "275px",
                dragBoards: false,
                click: function (el) {
                    console.log(el.getAttribute("data-eid"), "-", el.textContent);
                    //clickar para abrir mais detalhes da tarefa
                    //$.ajax({
                    //    url: '@Html.Raw(Url.Action("GetByID", "Task"))',
                    //    type: "get",
                    //    dataType: "json",
                    //    data: {
                    //        taskID: el.getAttribute("data-eid"),
                    //        ActionName: "Maintenance"
                    //    },
                    //    error: function (xhr, status, error) {
                    //        console.log(xhr);
                    //        console.log(status);
                    //        console.log(error);
                    //    }
                    //});
                },
                dropEl: function (el, target, source, sibling) {
                    console.log(el.getAttribute("data-eid"), "-", el.textContent, "movido para", target.parentElement.getAttribute("data-id"));
                    //ajax para dar update no status da tarefa
                    $.ajax({
                        url: '@Html.Raw(Url.Action("UpdateKanban", "Task"))',
                        type: "POST",
                        dataType: "json",
                        data: {
                            taskID: el.getAttribute("data-eid"),
                            statusID: target.parentElement.getAttribute("data-id"),
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr);
                            console.log(status);
                            console.log(error);
                        },
                        success: function (data) {
                            console.log(data);
                        }
                    });
                },
                boards: [
                    {
                        id: "301303300",
                        title: "Não Iniciada",
                        class: "notStarted",
                        item: arrayNaoIniciada,
                    },
                    {
                        id: "301303301",
                        title: "Em Andamento",
                        class: "onGoing",
                        item: arrayEmAndamento
                    },
                    {
                        id: "301303302",
                        title: "Concluída",
                        class: "completed",
                        item: arrayConcluida
                    },
                     {
                        id: "301303303",
                        title: "Cancelada",
                        class: "canceled",
                        item: arrayCancelada
                    },
                ]
            }
            );
        }
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            drawChart();

            $("#@Html.FieldIdFor(model => model.SearchSummary)").keydown(function (event) {
                if (event.keyCode == 13) {
                    $("#btn-aplicar-filtros").click();
                    return false;
                }
            });

            $("#@Html.FieldIdFor(model => model.SearchAssignToID)").keydown(function (event) {
                if (event.keyCode == 13) {
                    $("#btn-aplicar-filtros").click();
                    return false;
                }
            });

            $("#@Html.FieldIdFor(model => model.SearchStatusID)").keydown(function (event) {
                if (event.keyCode == 13) {
                    $("#btn-aplicar-filtros").click();
                    return false;
                }
            });

            $("#@Html.FieldIdFor(model => model.SearchCreatedByID)").keydown(function (event) {
                if (event.keyCode == 13) {
                    $("#btn-aplicar-filtros").click();
                    return false;
                }
            });
        });

        function additionalData() {
            var data = {
                SearchSummary: $('#@Html.FieldIdFor(model => model.SearchSummary)').val(),
                SearchStatusID: $('#@Html.FieldIdFor(model => model.SearchStatusID)').val(),
                SearchAssignToID: $('#@Html.FieldIdFor(model => model.SearchAssignToID)').val(),
                SearchCreatedByID: $('#@Html.FieldIdFor(model => model.SearchCreatedByID)').val()
            };
            addAntiForgeryToken(data);
            return data;
        };

    $('#btn-aplicar-filtros').click(function () {
        document.getElementById('kanban').innerHTML = "";
        drawChart();
    });
    </script>
</body>
