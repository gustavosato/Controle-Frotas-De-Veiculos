@model ControleVeiculos.MVC.Models.PositionsSalaries.PositionsSalarieModel

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/js/bootstrap-datepicker.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/css/bootstrap-datepicker.css" rel="stylesheet">

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>


@Html.HiddenFor(model => model.PositionsSalarieID)
@Html.HiddenFor(model => model.CreatedByID)

<div class="form-group row">
    <div class="col-md-6 mb-auto">
        <strong>@Html.LabelFor(model => model.FunctionID, new { @class = "col-sm-0 col-form-label text-left" })</strong>
        <strong><span style="color:black;">*</span></strong>
        @Html.DropDownList("FunctionID", Model.LoadFunction, "Selecione...", new { @class = "form-control", @autofocus = "autofocus" })
        @Html.ValidationMessageFor(model => model.FunctionID, "", new { @class = "form-text text-danger" })
    </div>
    <div class="col-md-2 mb-auto">
        <strong>@Html.LabelFor(model => model.ClassificationID, new { @class = "col-sm-0 col-form-label text-left" })</strong>
        <strong><span style="color:black;">*</span></strong>
        @Html.DropDownList("ClassificationID", Model.LoadClassification, "Selecione...", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ClassificationID, "", new { @class = "form-text text-danger" })
    </div>
    <div class="col-md-2 mb-auto">
        @Html.LabelFor(model => model.LevelID, new { @class = "col-sm-0 col-form-label text-left" })
        @Html.DropDownList("LevelID", Model.LoadLevel, "Selecione...", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.LevelID, "", new { @class = "form-text text-danger" })
    </div>
    <div class="col-md-2 mb-auto">
        @Html.LabelFor(model => model.CreationDate, new { @class = "col-sm-0 col-form-label text-left" })
        @Html.TextBoxFor(model => model.CreationDate, new { @class = "form-control text-left", @readonly = "readonly" })
        @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "form-text text-danger" })
    </div>
    <div class="col-md-2 mb-auto" onkeypress="return NumberOnly(event)">
        <strong>@Html.LabelFor(model => model.AmountPJ, new { @class = "col-sm-0 col-form-label text-left" })</strong>
        <strong><span style="color:black;">*</span></strong>
        @Html.TextBoxFor(model => model.AmountPJ, new { @class = "form-control text-left", placeholder = "0,00" })
        @Html.ValidationMessageFor(model => model.AmountPJ, "", new { @class = "form-text text-danger" })
    </div>
    <div class="col-md-2 mb-auto" onkeypress="return NumberOnly(event)">
        <strong>@Html.LabelFor(model => model.AmountCLT, new { @class = "col-sm-0 col-form-label text-left" })</strong>
        <strong><span style="color:black;">*</span></strong>
        @Html.TextBoxFor(model => model.AmountCLT, new { @class = "form-control text-left", placeholder = "0,00" })
        @Html.ValidationMessageFor(model => model.AmountCLT, "", new { @class = "form-text text-danger" })
    </div>

    <div class="col-md-2 mb-auto" onkeypress="return NumberOnly(event)">
        @Html.LabelFor(model => model.AmountCLTFLEX, new { @class = "col-sm-0 col-form-label text-left" })
        @Html.TextBoxFor(model => model.AmountCLTFLEX, new { @class = "form-control text-left", placeholder = "0,00" })
        @Html.ValidationMessageFor(model => model.AmountCLTFLEX, "", new { @class = "form-text text-danger" })
    </div>

    <div class="col-md-2 mb-auto" id="calender-container">
        <strong>@Html.LabelFor(model => model.StartingDate, new { @class = "col-sm-0 col-form-label text-left" })</strong>
        <strong><span style="color:black;">*</span></strong>
        <div class="input-group date">
            @Html.TextBoxFor(model => model.StartingDate, new { @class = "form-control", autocomplete = "off", placeholder = "Selecione..." })<span class="input-group-addon"></span>
            @Html.ValidationMessageFor(model => model.StartingDate, "", new { @class = "form-text text-danger" })
        </div>
    </div>
    <div class="col-md-2 mb-auto" id="calender-container">
        <strong>@Html.LabelFor(model => model.ClosingDate, new { @class = "col-sm-0 col-form-label text-left" })</strong>
        <strong><span style="color:black;">*</span></strong>
        <div class="input-group date">
            @Html.TextBoxFor(model => model.ClosingDate, new { @class = "form-control", autocomplete = "off", placeholder = "Selecione..." })<span class="input-group-addon"></span>
            @Html.ValidationMessageFor(model => model.ClosingDate, "", new { @class = "form-text text-danger" })
        </div>
    </div>
    <div class="col-md-2 mb-auto">
        @Html.LabelFor(model => model.LastModifiedDate, new { @class = "col-sm-0 col-form-label text-left" })
        @Html.TextBoxFor(model => model.LastModifiedDate, new { @class = "form-control text-left", @readonly = "readonly" })
        @Html.ValidationMessageFor(model => model.LastModifiedDate, "", new { @class = "form-text text-danger" })
    </div>

</div>
<script>
    function NumberOnly(e) {
        var tecla = (window.event) ? e.keyCode : e.which;
        if (tecla == 8 || tecla == 0)
            return true;
        if (tecla != 44 && tecla < 48 || tecla > 57)
            return false;
    }

    $('#AmountPJ').change(function () {
        var SubTotal
        if (document.getElementById("AmountPJ").value == "") {
            AmountPJ = "0.00"
        }
        else {
            AmountPJ = document.getElementById("AmountPJ").value.replace(",", ".").replace("R$ ", "");
        }

        document.getElementById('AmountPJ').value = "R$ " + parseFloat(AmountPJ.replace("R$", "")).toFixed(2).replace(".", ",");
    });

    $('#AmountCLT').change(function () {
        var SubTotal
        if (document.getElementById("AmountCLT").value == "") {
            AmountCLT = "0.00"
        }
        else {
            AmountCLT = document.getElementById("AmountCLT").value.replace(",", ".").replace("R$ ", "");
        }

        document.getElementById('AmountCLT').value = "R$ " + parseFloat(AmountCLT.replace("R$", "")).toFixed(2).replace(".", ",");
    });

    $('#AmountCLTFLEX').change(function () {
        var SubTotal
        if (document.getElementById("AmountCLTFLEX").value == "") {
            AmountCLTFLEX = "0.00"
        }
        else {
            AmountCLTFLEX = document.getElementById("AmountCLTFLEX").value.replace(",", ".").replace("R$ ", "");
        }

        document.getElementById('AmountCLTFLEX').value = "R$ " + parseFloat(AmountCLTFLEX.replace("R$", "")).toFixed(2).replace(".", ",");
    });

  

    function ComparaDatas() {
        var StartingDate = document.getElementById("StartingDate").value;
        var ClosingDate = document.getElementById("ClosingDate").value;

        var nova_StartingDate = parseInt(StartingDate.split("/")[2].toString() + StartingDate.split("/")[1].toString() + StartingDate.split("/")[0].toString());
        var nova_ClosingDate = parseInt(ClosingDate.split("/")[2].toString() + ClosingDate.split("/")[1].toString() + ClosingDate.split("/")[0].toString());

        if (nova_ClosingDate > nova_StartingDate) {
            return true
        }
        else if (nova_StartingDate > nova_ClosingDate) {
            Swal.fire({
                position: 'top-center',
                type: 'error',
                text: 'Data de início da vigência superior a data de término da vigência!!!',
                showConfirmButton: false,
                confirmButtonColor: "#9ACD32",
                timer: 2500
            })
            return false
        }
        else {
            return true
        }
    }

</script>

