@model ControleVeiculos.MVC.Models.Expenses.ExpenseModel

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>


@Html.HiddenFor(model => model.ExpenseID)
@Html.HiddenFor(model => model.CreatedByID)
@Html.HiddenFor(model => model.ApprovedByID)
@Html.HiddenFor(model => model.ApprovedDate)
@Html.HiddenFor(model => model.Refundable)

<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item">
        <a class="nav-link active" id="detail-tab" data-toggle="tab" href="#detail" role="tab" aria-controls="detail" aria-selected="true">Detalhes</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="attachment-tab" data-toggle="tab" href="#attachment" role="tab" aria-controls="attachment" aria-selected="false">Anexos</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="historical-tab" data-toggle="tab" href="#historical" role="tab" aria-controls="historical" aria-selected="false">Histórico de Alterações</a>
    </li>
</ul>
<div class="tab-content" id="myTabContent">
    <div class="tab-pane fade show active" id="detail" role="tabpanel" aria-labelledby="detail-tab">
        <br />
        <div class="card">
            <div class="card-body">
                <div class="form-group row">

                    <div class="col-md-4 mb-auto">
                        <strong>@Html.LabelFor(model => model.CustomerID, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.DropDownList("CustomerID", Model.LoadCustomers, "Selecione...", new { @class = "form-control", @autofocus = "au tofocus" })
                        @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-6 mb-auto">
                        @Html.LabelFor(model => model.DemandID, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.DropDownList("DemandID", Model.LoadDemands, "Selecione...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DemandID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto">
                        @Html.LabelFor(model => model.CreationDate, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.TextBoxFor(model => model.CreationDate, new { @class = "form-control text-left", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto">
                        @Html.LabelFor(model => model.StatusID, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.DropDownList("StatusID", Model.LoadStatus, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "form-text text-danger" })
                    </div>

                    <div class="col-md-2 mb-auto">
                        <strong>@Html.LabelFor(model => model.TypeExpenseID, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.DropDownList("TypeExpenseID", Model.LoadTypeExpenses, "Selecione...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TypeExpenseID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto" onkeypress="return NumberOnly(event)">
                        @Html.LabelFor(model => model.SubTotal, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.TextBoxFor(model => model.SubTotal, new { @class = "form-control text-left", placeholder = "Digite o valor", autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.SubTotal, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto" onkeypress="return NumberOnly(event)">
                        @Html.LabelFor(model => model.Kilometer, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.TextBoxFor(model => model.Kilometer, new { @class = "form-control text-left", placeholder = "Digite o valor" })
                        @Html.ValidationMessageFor(model => model.Kilometer, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto">
                        <strong>@Html.LabelFor(model => model.AmountExpense, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.TextBoxFor(model => model.AmountExpense, new { @class = "form-control text-left", @readonly = "readonly", placeholder = "0,00" })
                        @Html.ValidationMessageFor(model => model.AmountExpense, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto" id="calender-container">
                        <strong>@Html.LabelFor(model => model.RegisterDate, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        <div class="input-group date">
                            @Html.TextBoxFor(model => model.RegisterDate, new { @class = "form-control", autocomplete = "off", placeholder = "Selecione..." })<span class="input-group-addon"></span>
                            @Html.ValidationMessageFor(model => model.RegisterDate, "", new { @class = "form-text text-danger" })
                        </div>
                    </div>
                    <div class="col-md-2 mb-auto">
                        <strong>@Html.LabelFor(model => model.DepartmentID, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.DropDownList("DepartmentID", Model.LoadDepartments, "Selecione...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-4 mb-auto">
                        @Html.LabelFor(model => model.CreatedByID, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.DropDownList("CreatedByID", Model.LoadCreateds, new { @class = "form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.CreatedByID, "", new { @class = "form-text text-danger" })
                    </div>

                    <div class="col-md-4 mb-auto">
                        @Html.LabelFor(model => model.ApprovedByID, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.DropDownList("ApprovedByID", Model.LoadApproveds, "", new { @class = "form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.ApprovedByID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto">
                        @Html.LabelFor(model => model.ApprovedDate, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.TextBoxFor(model => model.ApprovedDate, new { @class = "form-control text-left", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.ApprovedDate, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-12 mb-auto">
                        <strong>@Html.LabelFor(model => model.Description, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", placeholder = "Digite uma descrição", rows = "2" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "form-text text-danger" })
                        @*<script>
                                $(document).ready(function () {
                                    $("#Description").kendoEditor({
                                        tools: [
                                            "formatting",
                                            "bold", "italic", "underline", "strikethrough",
                                            "justifyLeft", "justifyCenter", "justifyRight", "justifyFull",
                                            "insertUnorderedList", "insertOrderedList", "indent", "outdent",
                                            "createLink", "unlink", "insertImage", "insertFile",
                                            "subscript", "superscript",
                                            "tableWizard", "createTable",
                                            "addRowAbove", "addRowBelow",
                                            "addColumnLeft", "addColumnRight",
                                            "deleteRow", "deleteColumn",
                                            "viewHtml", "cleanFormatting",
                                            "fontName", "fontSize",
                                            "foreColor", "backColor"
                                        ],
                                        messages: {
                                            fontNameInherit: "Arial",
                                            fontSizeInherit: "3 (12pt)"
                                        },
                                        resizable: true
                                    });
                                });
                            </script>*@
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="tab-pane fade" id="attachment" role="tabpanel" aria-labelledby="attachment-tab">
        <div class="card">
            <div class="card-body">
                <div class="form-group row">
                    <div class="col-md-12 mb-auto">

                        <div class="col-md-12 mx-auto">
                            <div class="form-group row">
                                <input type="file" name="file" />
                            </div>
                        </div>
                        <div id="data-grid"></div>
                        <script>

                                $(document).ready(function () {
                                    $("#data-grid").kendoGrid({

                                dataSource: {
                                    type: "json",
                                transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("GetAllByRecordID", "Attachment"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: additionalData
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors"
                                },
                                    error: function (e) {
                                    display_kendoui_grid_error(e);
                                    this.cancelChanges();
                                },
                                    pageSize: 10,
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: false
                                },
                                    resizable: true,
                                    groupable: true,
                                    sortable: true,
                                pageable: {
                                    refresh: true,
                                    pageSizes: true,
                                    buttonCount: 5,
                                messages: {
                                    display: '{0} - {1} de {2} itens',
                                    allPages: 'Todos',
                                    itemsPerPage: 'Itens por página'
                                }
                                },
                                    columns: [{
                                            field: "AttachmentID",
                                            title: "ID",
                                            width: 50,
                                            headerAttributes: { style: "text-align:left" }
                                    }, {
                                            field: "FileName",
                                            title: "Nome do arquivo",
                                            width: 250,
                                            headerAttributes: { style: "text-align:left" }
                                    },{
                                            field: "",
                                            title: "Comandos",
                                            width: 50,
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            template: '<div title="Excluir Registro" class="btn btn-danger btn-sm text-center" onclick="AttachmentDelete(#=AttachmentID#)" data-toggle="modal" data-target="\\#AttachmentDeleteModal"> <i class="fa fa-trash"></i> </div> ' +
                                            '<a href="Attachment/Download?attachmentID=#=AttachmentID#" class="btn btn-info btn-sm text-center"> <i class="fa fa-download" text-danger false-icon"></i></a>'

                                    }],
                                    excelExport: function (e) {
                                        e.workbook.fileName = "LeanTest Cloud - Despesas.xlsx";
                                    }
                                });
                            });

                        </script>
                        <script type="text/javascript">
                    $(document).ready(function () {
                        $('#btnExportExcel').click(function () {
                            var grid = $('#data-grid').data('kendoGrid');
                            grid.saveAsExcel();
                            return false;
                        });

                        $('#btn-aplicar-filtros').click(function () {
                            var grid = $('#data-grid').data('kendoGrid');
                            if (grid.dataSource.page() == 1) {
                                grid.dataSource.page(1);
                            }
                            else {
                                grid.dataSource.read({ parameter: "value" });
                            }
                            return false;
                        });

                    });

                        function additionalData() {
                            var data = {
                                RecordID: $('#@Html.FieldIdFor(model => model.ExpenseID)').val(),
                                SystemFeatureID: "309"
                            };

                            addAntiForgeryToken(data);

                            return data;

                            };

                            var AttachmentDelete = function (attachmentID) {
                                var url = '/Attachment/GetByID?attachmentID=' + attachmentID + '&ActionName=Delete';

                                $('#AttachmentDeleteModalDiv').load(url, function () {

                                })
                            };

                            var Download = function (attachmentID) {
                                var url = '/Attachment/Download?attachmentID=' + attachmentID;

                                $('#DeleteModalDiv').load(url, function () {

                                })
                            };

                        </script>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="tab-pane fade" id="historical" role="tabpanel" aria-labelledby="historical-tab">
        <div class="card">
            <div class="card-body">
                <div class="form-group row">
                    <div class="col-md-12 mb-auto">
                        <div id="historical-grid"></div>
                        <script>

                                $(document).ready(function () {
                                    $("#historical-grid").kendoGrid({

                                dataSource: {
                                    type: "json",
                                transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("GetAll", "Historical"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: additionalData
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors"
                                },
                                    error: function (e) {
                                    display_kendoui_grid_error(e);
                                    this.cancelChanges();
                                },
                                    pageSize: 10,
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: false
                                },
                                    resizable: true,
                                    groupable: true,
                                    sortable: true,
                                pageable: {
                                    refresh: true,
                                    pageSizes: true,
                                    buttonCount: 5,
                                messages: {
                                    display: '{0} - {1} de {2} itens',
                                    allPages: 'Todos',
                                    itemsPerPage: 'Itens por página'
                                }
                                },
                                columns: [{
                                            field: "FieldName",
                                            title: "Campo",
                                            width: 70,
                                            headerAttributes: { style: "text-align:left" }
                                    }, {
                                            field: "OldValue",
                                            title: "Valor Anterior",
                                            width: 100,
                                            headerAttributes: { style: "text-align:left" }
                                    }, {
                                            field: "NewValue",
                                            title: "Valor Atual",
                                            width: 100,
                                            headerAttributes: { style: "text-align:left" }
                                    }, {
                                            field: "CreatedByID",
                                            title: "Alterado por",
                                            width: 70,
                                            headerAttributes: { style: "text-align:left" }
                                    },{
                                            field: "CreationDate",
                                            title: "Data da Alteração",
                                            width: 50,
                                            headerAttributes: { style: "text-align:left" }
                                    }],
                                    excelExport: function (e) {
                                        e.workbook.fileName = "LeanTest Cloud - Anexos.xlsx";
                                    }
                                });
                            });

                        </script>
                        <script type="text/javascript">
                            $(document).ready(function () {
                                $('#btnExportExcel').click(function () {
                                    var grid = $('#historical-grid').data('kendoGrid');
                                    grid.saveAsExcel();
                                    return false;
                                });

                                $('#btn-aplicar-filtros').click(function () {
                                    var grid = $('#historical-grid').data('kendoGrid');
                                    if (grid.dataSource.page() == 1) {
                                        grid.dataSource.page(1);
                                    }
                                    else {
                                        grid.dataSource.read({ parameter: "value" });
                                    }
                                    return false;
                                });


                            });

                        function additionalData() {
                            var data = {
                                RecordID: $('#@Html.FieldIdFor(model => model.ExpenseID)').val(),
                                SystemFeatureID: "309"
                            };

                            addAntiForgeryToken(data);

                            return data;

                            };

                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $('#TypeExpenseID').change(function () {
        if (document.getElementById("TypeExpenseID").value == 309300304) {
            ($('#Kilometer').prop("disabled", false) &&
                $('#SubTotal').val('') &&
                $('#AmountExpense').val('') &&
            $('#SubTotal').prop("disabled", true))
        } else {
            ($('#Kilometer').prop("disabled", true) &&
                $('#Kilometer').val('') &&
                $('#AmountExpense').val('') &&
                $('#SubTotal').val('') &&
                $('#SubTotal').prop("disabled", false));
        }
    });







    //$('#RegisterDate').change(function () {
    //    var CreationDate = document.getElementById("CreationDate").value;
    //    var new_CreationDate = CreationDate.toString("dd/MM/yyyy HH:mm:ss");
    //    result = new_CreationDate.substring(10, 0);
    //    var fd = Date.today().clearTime().moveToFirstDayOfMonth();
    //    var firstday = fd.toString("dd/MM/yyyy");

    //    if (document.getElementById("RegisterDate").value > document.getElementById("CreationDate").value && document.getElementById("RegisterDate").value < firstday)
    //        document.getElementById("RegisterDate").value = result


    //});

   $(document).ready(function () {
    $("#CustomerID").change(function () {
        $("#DemandID").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDemands")',

                dataType: 'json',
                data: { customerID: $("#CustomerID").val(), isActive: true },
                success: function (itens) {
                    $("#DemandID").append('<option value="">Selecione...</option>');
                    $.each(itens, function (i, item) {
                        $("#DemandID").append('<option value="' + item.Value + '">' + item.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });

    $('#SubTotal').change(function () {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetKMValue")',
            dataType: 'json',
            //data: { email: $("#Email").val() },
            success: function (response) {
                var kmValue = response.responseText;
                var SubTotal
                if (document.getElementById("SubTotal").value == "") {
                    SubTotal = "0.00"
                }
                else {
                    SubTotal = document.getElementById("SubTotal").value.replace(",", ".").replace("R$ ", "");

                }

                var Kilometer
                if (document.getElementById("Kilometer").value == "") {
                    Kilometer = "0.00"
                }
                else {
                    Kilometer = document.getElementById("Kilometer").value.replace(",", ".") * kmValue;
                }

                var AmountExpense = parseFloat(SubTotal) + parseFloat(Kilometer);


                document.getElementById('AmountExpense').value = "R$ " + parseFloat(AmountExpense).toFixed(2).replace(".", ",");
                document.getElementById('SubTotal').value = "R$ " + parseFloat(SubTotal.replace('R$', '')).toFixed(2).replace(".", ",");

                //document.getElementById('SubTotal').value = "R$ " + parseFloat(SubTotal).toFixed(2).replace(".", ",");


            },
            error: function (response) {
                $("#lblCustomerID").show();
                $("#lblCustomerID").text("Erro ao tentar recuperar a senha. Procure o administrador.");
            }
        });
    });

    $('#Kilometer').change(function () {

        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetKMValue")',
            dataType: 'json',
            //data: { email: $("#Email").val() },
            success: function (response) {
                var kmValue = response.responseText;
                var SubTotal
                if (document.getElementById("SubTotal").value == "") {
                    SubTotal = "0.00"
                }
                else {
                    SubTotal = document.getElementById("SubTotal").value.replace(",", ".").replace("R$ ", "");
                }

                var Kilometer
                if (document.getElementById("Kilometer").value == "") {
                    Kilometer = "0.00"
                }
                else {
                    Kilometer = document.getElementById("Kilometer").value.replace(",", ".") * kmValue;
                }

                var AmountExpense = parseFloat(SubTotal.replace('R$', '')) + parseFloat(Kilometer);

                document.getElementById('AmountExpense').value = "R$ " + parseFloat(AmountExpense).toFixed(2).replace(".", ",");
                document.getElementById('SubTotal').value = "R$ " + parseFloat(SubTotal.replace('R$', '')).toFixed(2).replace(".", ",");


            },
            error: function (response) {
                $("#lblCustomerID").show();
                $("#lblCustomerID").text("Erro ao tentar recuperar a senha. Procure o administrador.");
            }
        });
        var Download
    });

    function NumberOnly(e) {
        var tecla = (window.event) ? e.keyCode : e.which;
        if (tecla == 8 || tecla == 0)
            return true;
        if (tecla != 44 && tecla < 48 || tecla > 57)
            return false;
    }

    $('#SubTotal').bind('cut copy paste', function (e) {
        e.preventDefault();
    });



</script>

