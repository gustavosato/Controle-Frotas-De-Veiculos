 @model Lean.Test.Cloud.MVC.Models.Pipelines.PipelineModel


<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@*<script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>*@


@Html.HiddenFor(model => model.OportunityID)
@Html.HiddenFor(model => model.CreatedByID)

<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item">
        <a class="nav-link active" id="detail-tab" data-toggle="tab" href="#detail" role="tab" aria-controls="detail" aria-selected="true">Detalhes</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="event-tab" data-toggle="tab" href="#event" role="tab" aria-controls="event" aria-selected="false">Eventos</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="attachment-tab" data-toggle="tab" href="#attachment" role="tab" aria-controls="attachment" aria-selected="false">Anexos</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="historical-tab" data-toggle="tab" href="#historical" role="tab" aria-controls="historical" aria-selected="false">Histórico de Alterações</a>
    </li>
</ul>

<div class="tab-content" id="myTabContent">
    <div class="tab-pane fade show active" id="detail" role="tabpanel" aria-labelledby="detail-tab">
        <div class="card">
            <div class="card-body">
                <div class="form-group row" id="calender-container">
                    <div class="col-md-2 mb-auto">
                        @Html.LabelFor(model => model.OportunityCode, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.TextBoxFor(model => model.OportunityCode, new { @class = "form-control text-left", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.OportunityCode, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-8 mb-auto">
                    <strong>@Html.LabelFor(model => model.Summary, new { @class = "col-sm-0 col-form-label text-left" })
                    <span style="color:black;">*</span></strong>
                    @Html.TextBoxFor(model => model.Summary, new { @class = "form-control", autocomplete = "off", placeholder = "Digite o sumário" })<span class="input-group-addon"></span>
                    @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto">
                        @Html.LabelFor(model => model.CreationDate, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.TextBoxFor(model => model.CreationDate, new { @class = "form-control text-left", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-4 mb-auto">
                        <strong>@Html.LabelFor(model => model.CustomerID, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.DropDownList("CustomerID", Model.LoadCustomer, "Selecione...", new { @class = "form-control", @autofocus = "autofocus" })
                        @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-4 mb-auto">
                        @Html.LabelFor(model => model.StatusID, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.DropDownList("StatusID", Model.LoadStatus, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-4 mb-auto">
                        <strong>@Html.LabelFor(model => model.OfferID, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.DropDownList("OfferID", Model.LoadOffer, "Selecione...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OfferID, "", new { @class = "form-text text-danger" })
                    </div>

                    <div class="col-md-4 mb-auto">
                        <strong>@Html.LabelFor(model => model.OwnerID, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.DropDownList("OwnerID", Model.LoadOwner, "Selecione...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OwnerID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-3 mb-auto">
                        <strong>@Html.LabelFor(model => model.CostCenterID, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.DropDownList("CostCenterID", Model.LoadCostCenter, "Selecione...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CostCenterID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-3 mb-auto">
                        @Html.LabelFor(model => model.FaseID, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.DropDownList("FaseID", Model.LoadFase, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FaseID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto">
                        @Html.LabelFor(model => model.Probability, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.TextBoxFor(model => model.Probability, new { @class = "form-control text-left", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Probability, "", new { @class = "form-text text-danger" })
                    </div>

                    <div class="col-md-4 mb-auto">
                        <strong>@Html.LabelFor(model => model.SaleManagerID, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.DropDownList("SaleManagerID", Model.LoadSaleManager, "Selecione...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SaleManagerID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-6 mb-auto">
                        <strong>@Html.LabelFor(model => model.PowerSponsor, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.TextBoxFor(model => model.PowerSponsor, new { @class = "form-control text-left", placeholder = "Digite o nome" })
                        @Html.ValidationMessageFor(model => model.PowerSponsor, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto">
                        @Html.LabelFor(model => model.TypeID, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.DropDownList("TypeID", Model.LoadType, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TypeID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-4 mb-auto">
                        <strong>@Html.LabelFor(model => model.PreSalesID, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.DropDownList("PreSalesID", Model.LoadPreSales, "Selecione...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PreSalesID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-6 mb-auto">
                        <strong>@Html.LabelFor(model => model.Sponsor, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.TextBoxFor(model => model.Sponsor, new { @class = "form-control text-left", placeholder = "Digite o nome" })
                        @Html.ValidationMessageFor(model => model.Sponsor, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto">
                        <strong>@Html.LabelFor(model => model.TargetDate, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        <div class="input-group date">
                            @Html.TextBoxFor(model => model.TargetDate, new { @class = "form-control", autocomplete = "off", placeholder = "Selecione..." })<span class="input-group-addon"></span>
                            @Html.ValidationMessageFor(model => model.TargetDate, "", new { @class = "form-text text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4 mb-auto">
                        <strong>@Html.LabelFor(model => model.OperationManagerID, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.DropDownList("OperationManagerID", Model.LoadOperationManager, "Selecione...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OperationManagerID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-4 mb-auto">
                        <strong>@Html.LabelFor(model => model.PriorityID, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.DropDownList("PriorityID", Model.LoadPriority, "Selecione...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PriorityID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto" onkeypress="return NumberOnly(event)">
                        <strong>@Html.LabelFor(model => model.ExpectedValue, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                        <strong><span style="color:black;">*</span></strong>
                        @Html.TextBoxFor(model => model.ExpectedValue, new { @class = "form-control text-left", placeholder = "Digite o valor" })
                        @Html.ValidationMessageFor(model => model.ExpectedValue, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto" onkeypress="return NumberOnly(event)">
                        @Html.LabelFor(model => model.Billed, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.TextBoxFor(model => model.Billed, new { @class = "form-control text-left", placeholder = "Digite o valor" })
                        @Html.ValidationMessageFor(model => model.Billed, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-4 mb-auto">
                        @Html.LabelFor(model => model.FrequencyOfInteractionID, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.DropDownList("FrequencyOfInteractionID", Model.LoadFrequencyOfInteractions, "Selecione...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FrequencyOfInteractionID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-4 mb-auto">
                        @Html.LabelFor(model => model.ApprovedByID, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.DropDownList("ApprovedByID", Model.LoadApprovedBy, "Selecione...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ApprovedByID, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto">
                        @Html.LabelFor(model => model.ApprovedDate, new { @class = "col-sm-0 col-form-label text-left" })
                        <div class="input-group date">
                            @Html.TextBoxFor(model => model.ApprovedDate, new { @class = "form-control", autocomplete = "off", placeholder = "Selecione..." })<span class="input-group-addon"></span>
                            @Html.ValidationMessageFor(model => model.ApprovedDate, "", new { @class = "form-text text-danger" })
                        </div>
                    </div>
                    <div class="col-md-2 mb-auto">
                        @Html.LabelFor(model => model.ClosingDate, new { @class = "col-sm-0 col-form-label text-left" })
                        <div class="input-group date">
                            @Html.TextBoxFor(model => model.ClosingDate, new { @class = "form-control", autocomplete = "off", placeholder = "Selecione..." })<span class="input-group-addon"></span>
                            @Html.ValidationMessageFor(model => model.ClosingDate, "", new { @class = "form-text text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4 mb-auto">
                        @Html.LabelFor(model => model.Quarter1, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.TextBoxFor(model => model.Quarter1, new { @class = "form-control", autocomplete = "off", placeholder = "Digite um valor" })<span class="input-group-addon"></span>
                        @Html.ValidationMessageFor(model => model.Quarter1, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-4 mb-auto">
                        @Html.LabelFor(model => model.Quarter2, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.TextBoxFor(model => model.Quarter2, new { @class = "form-control", autocomplete = "off", placeholder = "Digite um valor" })<span class="input-group-addon"></span>
                        @Html.ValidationMessageFor(model => model.Quarter2, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto">
                        @Html.LabelFor(model => model.Quarter3, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.TextBoxFor(model => model.Quarter3, new { @class = "form-control", autocomplete = "off", placeholder = "Digite um valor" })<span class="input-group-addon"></span>
                        @Html.ValidationMessageFor(model => model.Quarter3, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-2 mb-auto">
                        @Html.LabelFor(model => model.Quarter4, new { @class = "col-sm-0 col-form-label text-left" })
                        @Html.TextBoxFor(model => model.Quarter4, new { @class = "form-control", autocomplete = "off", placeholder = "Digite um valor" })<span class="input-group-addon"></span>
                        @Html.ValidationMessageFor(model => model.Quarter4, "", new { @class = "form-text text-danger" })
                    </div>
                    <div class="col-md-12 mb-auto">
                        <ul class="nav nav-tabs" id="myTab" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="description-tab" data-toggle="tab" href="#description" role="tab" aria-controls="description" aria-selected="true">Descrição</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="comment-tab" data-toggle="tab" href="#comment" role="tab" aria-controls="comment" aria-selected="false">Comentários</a>
                            </li>
                        </ul>
                        <div class="tab-content" id="myTabContent">
                            <div class="tab-pane fade show active" id="description" role="tabpanel" aria-labelledby="description-tab">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="form-group row">
                                            <div class="col-md-12 mb-auto">

                                                <strong>@Html.LabelFor(model => model.Description, new { @class = "col-sm-0 col-form-label text-left" })</strong>
                                                <strong><span style="color:black;">*</span></strong>
                                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", placeholder = "Digite uma descrição", rows = "2" })
                                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "form-text text-danger" })
                                                <script>
                                                    $(document).ready(function () {
                                                        $("#Description").kendoEditor({
                                                            tools: [
                                                                "formatting",
                                                                "bold", "italic", "underline", "strikethrough",
                                                                "justifyLeft", "justifyCenter", "justifyRight", "justifyFull",
                                                                "insertUnorderedList", "insertOrderedList", "indent", "outdent",
                                                                "createLink", "unlink", "insertImage", "insertFile",
                                                                "subscript", "superscript",
                                                                "tableWizard", "createTable",
                                                                "addRowAbove", "addRowBelow",
                                                                "addColumnLeft", "addColumnRight",
                                                                "deleteRow", "deleteColumn",
                                                                "viewHtml", "cleanFormatting",
                                                                "fontName", "fontSize",
                                                                "foreColor", "backColor"
                                                            ],
                                                            messages: {
                                                                fontNameInherit: "Arial",
                                                                fontSizeInherit: "3 (12pt)",
                                                            },
                                                            resizable: true
                                                        });
                                                    });

                                                    function ValidarCampo() {
                                                        var Description = document.getElementById("Description").value;

                                                        if (Description !== "") {
                                                            return true
                                                        }
                                                        else if (Description === "") {
                                                            Swal.fire({
                                                                position: 'top-center',
                                                                type: 'error',
                                                                text: 'Descrição é um campo de preenchimento obrigatório!!!',
                                                                showConfirmButton: false,
                                                                confirmButtonColor: "#9ACD32",
                                                                timer: 2500
                                                            })
                                                            return false
                                                        }
                                                        else {
                                                            return true
                                                        }
                                                    }
                                                </script>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="comment" role="tabpanel" aria-labelledby="comment-tab">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="form-group row">
                                            <div class="col-md-12 mb-auto">
                                                <strong>@Html.TextAreaFor(model => model.Comments, new { @class = "form-control", placeholder = "Digite uma descrição", rows = "2" })</strong>
                                                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "form-text text-danger" })
                                                <script>
                                                    $(document).ready(function () {
                                                        $("#Comments").kendoEditor({
                                                            tools: [
                                                                "formatting",
                                                                "bold", "italic", "underline", "strikethrough",
                                                                "justifyLeft", "justifyCenter", "justifyRight", "justifyFull",
                                                                "insertUnorderedList", "insertOrderedList", "indent", "outdent",
                                                                "createLink", "unlink", "insertImage", "insertFile",
                                                                "subscript", "superscript",
                                                                "tableWizard", "createTable",
                                                                "addRowAbove", "addRowBelow",
                                                                "addColumnLeft", "addColumnRight",
                                                                "deleteRow", "deleteColumn",
                                                                "viewHtml", "cleanFormatting",
                                                                "fontName", "fontSize",
                                                                "foreColor", "backColor"
                                                            ],
                                                            messages: {
                                                                fontNameInherit: "Arial",
                                                                fontSizeInherit: "3 (12pt)"
                                                            },
                                                            resizable: true
                                                        });
                                                    });
                                                </script>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="tab-pane fade" id="event" role="tabpanel" aria-labelledby="event-tab">
        <div class="container-fluid">
            <div class="row">
                <br />
                <div class="content-header clearfix">
                    <div class="pull-left">
                        <br />
                        <button type="button" onclick="AddEvent(@Model.OportunityID)" id="btnNewEvent" class="btn btn-dark btn-sm" data-toggle="modal" data-target='#AddEventModal' title="Novo Registro">
                            <i class="fa fa-plus-circle"></i> Novo
                        </button>

                        <button type="button" id="btnExportExcelEvent" class="btn btn-info btn-sm" title="Exportar para Excel">
                            <i class="fa fa-file-excel-o"></i> Exportar para Excel
                        </button>
                    </div>
                </div>
                <br />
            </div>
        </div>
        <br />
        <div class="card">
            <div class="card-body">
                <div class="form-group row">
                    <div class="col-md-12 mb-auto">
                        <div id="event-grid"></div>
                        <script>
                                $(document).ready(function () {
                                    $("#event-grid").kendoGrid({

                                dataSource: {
                                    type: "json",
                                transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("GetAllByOportunityID", "PipelineEvent"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: additionalData
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors"
                                },
                                    error: function (e) {
                                    display_kendoui_grid_error(e);
                                    this.cancelChanges();
                                },
                                    pageSize: 10,
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: false
                                },
                                    resizable: true,
                                    groupable: true,
                                    sortable: true,
                                pageable: {
                                    refresh: true,
                                    pageSizes: true,
                                    buttonCount: 5,
                                messages: {
                                    display: '{0} - {1} de {2} itens',
                                    allPages: 'Todos',
                                    itemsPerPage: 'Itens por página'
                                }
                                },
                                columns: [{
                                    field: "",
                                    title: "Comandos",
                                    width: 50,
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: '<div title="Editar Evento" class="btn btn-primary btn-sm text-center" onclick="EditEvent(#=SaleEventID#)" data-toggle="modal" data-target="\\#MaintenanceEventModal"> <i class="fa fa-edit"></i> </div> ' +
                                    '<div title="Excluir Evento" class="btn btn-danger btn-sm text-center" onclick="DeleteEvent(#=SaleEventID#)" data-toggle="modal" data-target="\\#DeleteEventModal"> <i class="fa fa-trash"></i> </div> '

                                }, {
                                    field: "CreatedByID",
                                    title: "Criado por",
                                    width: 50,
                                    headerAttributes: { style: "text-align:left" }
                                }, {
                                    field: "Description",
                                    title: "Descrição",
                                    width: 150,
                                    headerAttributes: { style: "text-align:left" }
                                }, {
                                    field: "RegisterDate",
                                    title: "Data de Registro",
                                    width: 50,
                                    headerAttributes: { style: "text-align:left" }
                                }, {
                                    field: "TypeID",
                                    title: "Tipo",
                                    width: 50,
                                    headerAttributes: { style: "text-align:left" }
                                }, {
                                    field: "NextStepID",
                                    title: "Próximo Passo",
                                    width: 50,
                                    headerAttributes: { style: "text-align:left" }
                                }],
                                excelExport: function (e) {
                                    e.workbook.fileName = "LeanTest Cloud - Events.xlsx";
                                }
                            });
                        });

                        </script>
                        <script type="text/javascript">
                            $(document).ready(function () {
                                $('#btnExportExcelEvent').click(function () {
                                    var grid = $('#event-grid').data('kendoGrid');
                                    grid.saveAsExcel();
                                    return false;
                                });

                                $('#btn-aplicar-filtros').click(function () {
                                    var grid = $('#event-grid').data('kendoGrid');
                                    if (grid.dataSource.page() == 1) {
                                        grid.dataSource.page(1);
                                    }
                                    else {
                                        grid.dataSource.read({ parameter: "value" });
                                    }
                                    return false;
                                });

                            });

                            function additionalData() {
                                var data = {
                                    RecordID: $('#@Html.FieldIdFor(model => model.OportunityID)').val()
                                };

                                addAntiForgeryToken(data);

                                return data;

                            };

                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="tab-pane fade" id="attachment" role="tabpanel" aria-labelledby="attachment-tab">
        <div class="container-fluid">
            <div class="row">
                <br />
                <div></div>

            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <div class="form-group row">
                    <div class="col-md-12 mb-auto">

                        <div class="col-md-12 mx-auto">
                            <div class="form-group row">
                                <input type="file" name="file" />
                            </div>
                        </div>
                        <div id="attachment-grid"></div>
                        <script>

                                $(document).ready(function () {
                                    $("#attachment-grid").kendoGrid({

                                dataSource: {
                                    type: "json",
                                transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("GetAllByRecordID", "Attachment"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: additionalData
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors"
                                },
                                    error: function (e) {
                                    display_kendoui_grid_error(e);
                                    this.cancelChanges();
                                },
                                    pageSize: 10,
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: false
                                },
                                    resizable: true,
                                    groupable: true,
                                    sortable: true,
                                pageable: {
                                    refresh: true,
                                    pageSizes: true,
                                    buttonCount: 5,
                                messages: {
                                    display: '{0} - {1} de {2} itens',
                                    allPages: 'Todos',
                                    itemsPerPage: 'Itens por página'
                                }
                                },
                                    columns: [{
                                            field: "AttachmentID",
                                            title: "ID",
                                            width: 50,
                                            headerAttributes: { style: "text-align:left" }
                                    }, {
                                            field: "FileName",
                                            title: "Nome do arquivo",
                                            width: 250,
                                            headerAttributes: { style: "text-align:left" }
                                    },{
                                            field: "",
                                            title: "Comandos",
                                            width: 50,
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            template: '<div title="Excluir" class="btn btn-danger btn-sm text-center" onclick="AttachmentDelete(#=AttachmentID#)" data-toggle="modal" data-target="\\#AttachmentDeleteModal"> <i class="fa fa-trash"></i> </div> ' +
                                            '<a href="Attachment/Download?attachmentID=#=AttachmentID#" class="btn btn-info btn-sm text-center"> <i class="fa fa-download" text-danger false-icon"></i></a>'

                                    }],
                                    excelExport: function (e) {
                                        e.workbook.fileName = "LeanTest Cloud - Anexos.xlsx";
                                    }
                                });
                            });

                        </script>
                        <script type="text/javascript">
                            $(document).ready(function () {
                                $('#btnExportExcel').click(function () {
                                    var grid = $('#attachment-grid').data('kendoGrid');
                                    grid.saveAsExcel();
                                    return false;
                                });

                                $('#btn-aplicar-filtros').click(function () {
                                    var grid = $('#attachment-grid').data('kendoGrid');
                                    if (grid.dataSource.page() == 1) {
                                        grid.dataSource.page(1);
                                    }
                                    else {
                                        grid.dataSource.read({ parameter: "value" });
                                    }
                                    return false;
                                });

                            });

                            function additionalData() {
                                var data = {
                                    RecordID: $('#@Html.FieldIdFor(model => model.OportunityID)').val(),
                                    SystemFeatureID: "320"
                                };

                                addAntiForgeryToken(data);

                                return data;

                            };

                            var AttachmentDelete = function (attachmentID) {
                                var url = '/Attachment/GetByID?attachmentID=' + attachmentID + '&ActionName=Delete';

                                $('#AttachmentDeleteModalDiv').load(url, function () {

                                })
                            };

                            var Download = function (attachmentID) {
                                var url = '/Attachment/Download?attachmentID=' + attachmentID;

                                $('#DeleteModalDiv').load(url, function () {

                                })
                            };

                        </script>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="tab-pane fade" id="historical" role="tabpanel" aria-labelledby="historical-tab">
        <div class="card">
            <div class="card-body">
                <div class="form-group row">
                    <div class="col-md-12 mb-auto">
                        <div id="historical-grid"></div>
                        <script>

                                $(document).ready(function () {
                                    $("#historical-grid").kendoGrid({

                                dataSource: {
                                    type: "json",
                                transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("GetAll", "Historical"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: additionalData
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors"
                                },
                                    error: function (e) {
                                    display_kendoui_grid_error(e);
                                    this.cancelChanges();
                                },
                                    pageSize: 10,
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: false
                                },
                                    resizable: true,
                                    groupable: true,
                                    sortable: true,
                                pageable: {
                                    refresh: true,
                                    pageSizes: true,
                                    buttonCount: 5,
                                messages: {
                                    display: '{0} - {1} de {2} itens',
                                    allPages: 'Todos',
                                    itemsPerPage: 'Itens por página'
                                }
                                },
                                columns: [{
                                            field: "FieldName",
                                            title: "Campo",
                                            width: 70,
                                            headerAttributes: { style: "text-align:left" }
                                    }, {
                                            field: "OldValue",
                                            title: "Valor Anterior",
                                            width: 100,
                                            headerAttributes: { style: "text-align:left" }
                                    }, {
                                            field: "NewValue",
                                            title: "Valor Atual",
                                            width: 100,
                                            headerAttributes: { style: "text-align:left" }
                                    }, {
                                            field: "CreatedByID",
                                            title: "Alterado por",
                                            width: 70,
                                            headerAttributes: { style: "text-align:left" }
                                    },{
                                            field: "CreationDate",
                                            title: "Data da Alteração",
                                            width: 50,
                                            headerAttributes: { style: "text-align:left" }
                                    }],
                                    excelExport: function (e) {
                                        e.workbook.fileName = "LeanTest Cloud - Anexos.xlsx";
                                    }
                                });
                            });

                        </script>
                        <script type="text/javascript">
                            $(document).ready(function () {
                                $('#btnExportExcel').click(function () {
                                    var grid = $('#historical-grid').data('kendoGrid');
                                    grid.saveAsExcel();
                                    return false;
                                });

                                $('#btn-aplicar-filtros').click(function () {
                                    var grid = $('#historical-grid').data('kendoGrid');
                                    if (grid.dataSource.page() == 1) {
                                        grid.dataSource.page(1);
                                    }
                                    else {
                                        grid.dataSource.read({ parameter: "value" });
                                    }
                                    return false;
                                });


                            });

                        function additionalData() {
                            var data = {
                                RecordID: $('#@Html.FieldIdFor(model => model.OportunityID)').val(),
                                SystemFeatureID: "320"
                            };

                            addAntiForgeryToken(data);

                            return data;

                            };

                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $('#ExpectedValue').change(function () {
        var SubTotal
        if (document.getElementById("ExpectedValue").value == "") {
            ValueToBeRealized = "0.00"
        }
        else {
            ExpectedValue = document.getElementById("ExpectedValue").value.replace(",", ".").replace("R$ ", "");
        }

        document.getElementById('ExpectedValue').value = "R$ " + parseFloat(ExpectedValue.replace("R$", "")).toFixed(2).replace(".", ",");
    });

    $('#Billed').change(function () {
        var Billed
        if (document.getElementById("Billed").value == "") {
            Billed = "0.00"
        }
        else {
            Billed = document.getElementById("Billed").value.replace(",", ".").replace("R$ ", "");
        }

        document.getElementById('Billed').value = "R$ " + parseFloat(Billed.replace("R$", "")).toFixed(2).replace(".", ",");
    });

    $('#FaseID').change(function () {
        var Probability
        //prospect
        if (document.getElementById("FaseID").value == "320301300") {
            Probability = "0%"
        }
        //lead
        else if (document.getElementById("FaseID").value == "320301301") {
            Probability = "25%"
        }
        //deal
        else if (document.getElementById("FaseID").value == "320301302") {
            Probability = "50%"
        }
        //win
        else if (document.getElementById("FaseID").value == "320301303") {
            Probability = "100%"
        }
        //lost
        else if (document.getElementById("FaseID").value == "320301304") {
            Probability = "0%"
        }

        document.getElementById('Probability').value = Probability;
    });

    function NumberOnly(e) {
        var tecla = (window.event) ? e.keyCode : e.which;
        if (tecla == 8 || tecla == 0)
            return true;
        if (tecla != 44 && tecla < 48 || tecla > 57)
            return false;
    }

    $('#ExpectedValue').bind('cut copy paste', function (e) {
        e.preventDefault();
    });
    $('#Billed').bind('cut copy paste', function (e) {
        e.preventDefault();
    });



</script>