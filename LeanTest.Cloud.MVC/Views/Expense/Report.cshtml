@model Lean.Test.Cloud.MVC.Models.Expenses.ExpenseModel

@using (Html.BeginForm())
{
    <div class="container-fluid">
        <br />
        <div class="content-header clearfix">
            <div class="pull-left">
                <button class="btn btn-primary btn-sm" type="button" id="btnOpenFilterReport" data-toggle="collapse" data-target="#collapseReport" aria-expanded="false" aria-controls="collapseReport" title="Filtrar">
                    <i class="fa fa-filter"></i> Filtrar
                </button>
                <button type="button" id="btnExportExcelReport" class="btn btn-info btn-sm" title="Exportar para Excel">
                    <i class="fa fa-file-excel-o"></i> Exportar para Excel
                </button>
            </div>
        </div>
        <br />

        <div class="card">
            <div class="collapse" id="collapseReport">
                <div class="card card-body">
                    <div class="row">
                        <div class="col-md-12 mx-auto">
                            <div class="form-group row" id="calender-container">
                                @Html.LabelFor(model => model.SearchStartDateReport, new { @class = "col-sm-2 col-form-label text-right" })
                                <div class="col-sm-3">
                                    <div class="input-group date">
                                        @Html.TextBoxFor(model => model.SearchStartDateReport, new { @class = "form-control", autocomplete = "off" })<span class="input-group-addon"></span>
                                    </div>
                                </div>
                                @Html.LabelFor(model => model.SearchEndDateReport, new { @class = "col-sm-2 col-form-label text-right" })
                                <div class="col-sm-3">
                                    <div class="input-group date">
                                        @Html.TextBoxFor(model => model.SearchEndDateReport, new { @class = "form-control", autocomplete = "off" })<span class="input-group-addon"></span>
                                    </div>
                                </div>
                            </div>
                           
                         
                            <br />
                            <div class="col">
                                <div class="text-center">
                                    <button type="button" class="btn btn-success btn-sm" id="btnFilterReport" title="Aplicar filtros">
                                        <i class="fa fa-check-circle"></i> Filtrar
                                    </button>
                                    <button class="btn btn-primary btn-sm" type="button" id="btnCloseFilterReport" data-toggle="collapse" data-target="#collapseReport" aria-expanded="false" aria-controls="collapseReport" title="Fechar filtros">
                                        <i class="fa fa-filter"></i> Fechar
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-body">
                <div><h5>TOTAL DE DESPESAS - MÊS ATUAL</h5></div>

                <div id="totalExpenses-grid"></div>
                <script>

                $(document).ready(function () {
                $("#totalExpenses-grid").kendoGrid({

                dataSource: {
                    type: "json",
                transport: {
                read: {
                    url: "@Html.Raw(Url.Action("GetTotalByUsers", "Expense"))",
                    type: "POST",
                    dataType: "json",
                    data: additionalData
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors"
                },
                    error: function (e) {
                    display_kendoui_grid_error(e);
                    this.cancelChanges();
                },
                    pageSize: 10,
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: false
                },
                    resizable: true,
                    groupable: true,
                    sortable: true,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5,
                messages: {
                    display: '{0} - {1} de {2} itens',
                    allPages: 'Todos',
                    itemsPerPage: 'Itens por página'
                }
                },
                    columns: [{
                        field: "StatusID",
                        title: "Status",
                        width: 30,
                        headerAttributes: { style: "text-align:center" },
                        attributes: { class: "text-center" },
                        template: '# if(StatusID == "Lançada") {# <i class="fa fa-plus text-dark true-icon"></i> #}  ' +
                        'else if(StatusID == "Aprovada") { # <i class="fa fa-check text-info true-icon"></i> # }  ' +
                        'else if(StatusID == "Reembolsada") { # <i class="fa fa-check text-success true-icon"></i> # }  ' +
                        'else if(StatusID == "Não Reembolsável") { # <i class="fa fa-window-close text-warning true-icon"></i> # }  ' +
                        'else {# <i class="fa fa-close text-danger false-icon"></i> #}  #'
                    }, {

                            field: "CreatedByID",
                            title: "Colaborador",
                            width: 90,
                            headerAttributes: { style: "text-align:left" }
                        }, {

                            field: "AmountExpense",
                            title: "Total das Despesas",
                            width: 30,
                            headerAttributes: { style: "text-align:left" }
                    }, {

                            field: "StatusID",
                        title: "Status da Despesa",
                        width: 30,
                        headerAttributes: { style: "text-align:left" }
                    }],
                    excelExport: function (e) {
                        e.workbook.fileName = "LeanTest Cloud - Depesas Totalizada.xlsx";
                    }
                    });
                });

                </script>
                <script type="text/javascript">
                    $(document).ready(function () {

                        $('#btnExportExcelReport').click(function () {
                            var grid = $('#totalExpenses-grid').data('kendoGrid');
                            grid.saveAsExcel();
                            return false;
                        });

                        $('#btnFilterReport').click(function () {
                            var grid = $('#totalExpenses-grid').data('kendoGrid');
                            if (grid.dataSource.page() == 1) {
                                grid.dataSource.page(1);
                            }
                            else {
                                grid.dataSource.read({ parameter: "value" });
                            }
                            return false;
                        });

                        $("#@Html.FieldIdFor(model => model.SearchStartDateReport)").keydown(function (event) {
                            if (event.keyCode == 13) {
                                $("#btnFilterReport").click();
                                return false;
                            }
                        });

                        $("#@Html.FieldIdFor(model => model.SearchEndDateReport)").keydown(function (event) {
                            if (event.keyCode == 13) {
                                $("#btnFilterReport").click();
                                return false;
                            }
                        });
                    });

                    function additionalData() {
                        var data = {
                            SearchStartDateReport: $('#@Html.FieldIdFor(model => model.SearchStartDateReport)').val(),
                            SearchEndDateReport: $('#@Html.FieldIdFor(model => model.SearchEndDateReport)').val()
                        };

                        addAntiForgeryToken(data);

                        return data;

                    };

                     $(document).ready(function () {
                         $("#SearchCustomerID").change(function () {
                             $("#SearchDemandID").empty();
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetDemands")',

                                dataType: 'json',
                                data: { customerID: $("#SearchCustomerID").val(), isActive: false },
                                success: function (itens) {
                                    $("#SearchDemandID").append('<option value="">Selecione...</option>');
                                    $.each(itens, function (i, item) {
                                        $("#SearchDemandID").append('<option value="' + item.Value + '">' + item.Text + '</option>');
                                    });
                                },
                                error: function (ex) {
                                    alert('Failed to retrieve states.' + ex);
                                }
                            });
                            return false;
                        })
                    });

                </script>
            </div>
        </div>
    </div>

}

